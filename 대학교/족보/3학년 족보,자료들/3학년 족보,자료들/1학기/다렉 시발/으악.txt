d3device command 리스트의 특징
: 명령을 순서대로 저장한뒤 실행  

커맨드 실행과정 설명
(CPU)
1. 명령 할당자 만들기
2. 명령 리스트 만들기
3. 명령 기록하기
4. 명령 리스트 닫기
5. 명령 리스트를 명령 큐로 보내기
(GPU)
6. 명령 큐 실행

plane 함수 설명
: Planedot 함수는 평면과 4D 벡터의 내적. 동차 좌표계의 한 점과 평면 사이의 위치 관계를 결정한다
  PlaneDotCoord 함수는 평면과 3D 벡터의 내적. 한 점에서 평면까지의 거리
  PlaneDotNormal 함수는 평면의 법선 벡터와 3D 방향 벡터의 내적. 두 벡터 사이의 각도

디스크립터를 함수 위주로 하여 설명
GPU 파이프라인에 바인딩된 리소스 및 리소스 뷰를 나타내는 데 사용됩니다.
create뎁스스텐실뷰: 뎁스 스텐실 버퍼로 사용 할 수 있는 뷰를 생성
	렌더타겟뷰: 렌더링 대상으로 사용할 수 있는 뷰를 생성
	세이더 리소스 뷰: 셰이더 리소스에 액세스하는 데 사용할 수 있는 뷰를 생성	


원근 투영 변환 행렬을 사용하는 이유
: 행렬을 사용하여 변환을 더욱 효율적으로 처리 할 수 있다
또한, 많은 수의 정점에 동시에 적용할 수 있으므로 비디오 게임과 같은 실시간 렌더링 응용 프로그램에 적합합니다.


뎁스 스텐실 버퍼 다이렉트 디바이스 연결
1. 뎁스 스텐실 버퍼 리소스 생성
2. 뎁스 스텐실 뷰 만들기
3. 뎁스 스텐실 상태 초기화
4. 뎁스 스텐실 뷰를 파이프라인에 연결
5. 뎁스 스텐실 버퍼 지우기
6. 뎁스 스텐시 버퍼 렌더링

전체화면을 윈도우 화면을 변경하는 거 설명
: DXGI가 전면 버퍼/윈도우 크기 변경

DXGI 관련 장치 초기화
: DXGI 팩토리 생성 -> 어댑터/디스플레이 선택 -> 디바이스 생성 -> 커맨드 큐 -> 스왑체인 생성

IDXGISwapChain
: 렌더링된 영상을 저장하기 위한 하나 이상의 버퍼를 제공

다렉 렌더링 파이프 라인
입력 조립기 -> 정점 쉐이더 -> 헐 쉐이더 -> 테셀레이터 -> 도메인 쉐이더 -> 기하 쉐이더 ->
래스터라이저 -> 픽셀 쉐이더 -> 출력 병합기
-> 스트림 출력

사원수
: 4차원 행렬 = 3차원 벡터(회전) + 스칼라(회전의 크기)

입력 조립기 (IA) -> 정점 쉐이더 (VS) -> 헐 쉐이더 (HS) -> 테셀레이터 -> 도메인 쉐이더 (DS) -> 기하 쉐이더 (GS) -> 레스터라이저 -> 픽셀 쉐이더(PS) -> 출력 병합기
			     -> 스트림 출력
고정 프로그램 단계: 입력 조립, 테셀레이터, 스트림 출력, 래스터 라이저, 출력병합
프로그램 가능 단계: 정점 쉐이터, 헐 쉐이더, 도메인 쉐이더, 기하 쉐이더, 픽셀 쉐이더
고정 프로그램 단계는 내부 내용 변경 불가. 설정만 가능함
프로그램 단계는 쉐이더를 통해 설정 가능

입력 조립 (IA): 정점 데이터를 프리미티브로 조립. 시스템 생성값(시맨틱) 추가.
정점 쉐이더 (VS): 각 정점에 대한 연산을 수행. 각 정점당 한번 호출, 하나의 출력 정점을 생성.
헐 쉐이더 (HS): 모형을 더욱 동적으로 세분화
테셀레이터 (TS): 더 세분화 + 헐 쉐이더 기반으로 새 정점 만들기
도메인 쉐이더 (DS): 각 정점을 3D 공간으로 변환
기하 쉐이더 (GS): 사용자 정의 기준에 따라 프리미티브 생성/폐기
레스터 라이저 (RS): 각 픽셀에 대한 연산 수행 후 깊이값 출력. 보간으로 픽셀로 변환
스트림 출력 (SO): 
픽셀 쉐이더 (PS): 각 픽셀 당 한번식 호출. 픽셀 연산 수행
출력병합 (OM): 각 픽셀에 대한 깊이 스텐실 검사와 블렌딩 연산을 수행하여 최종 출력 색상을 결정


루트 시그니쳐
-	어떤 리소스가 그래픽스 파이프라인의 쉐이더에 연결되는가를 정의
-	명령 리스트들을 쉐이더가 요구하는 리소스에 연결
-	그래픽스/계산 루트 시그니쳐
