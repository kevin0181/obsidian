// ------------- 주의 ------------------
// namespace std를 사용하였다.
// include 문장을 답지에 적을 필요없다.
// 실행되지 않는 코드를 적으면 감점한다.
// 답이 맞더라도 효율 낮은 코드나 알고리즘을 사용하지 않은 코드는 감점한다.
// 프로그램 환경 - Release/x64, 프로젝트 속성 - 미리 보기 - 최신 C++ 초안의 기능(/std:c++latest})

// e-class에서 시험.zip을 다운 받은 후 시작한다.

// 각 문제를 해결하는데 필요한 코드(멤버함수 포함)를 답지에 적는다.
// 화면 출력을 적으라는 문제는 출력된 내용을 답지에 적는다.

//--------------------------------------------------------------------------
// class Test
// num 만큼 int를 동적할당받는다. 할당받은 메모리는 랜덤값([2,999])으로 채운다
//---------------------------------------------------------------------------

#include<iostream>
#include<fstream>
#include <filesystem>

using namespace std;

class Test {
	int num{};		// 랜덤값 [2,999]
	int* p{};		// 할당받은 메모리 시작 주소
public:
	// 생략
	void write(ostream& os) const {
		os.write((char*)&num, sizeof(int));
		os.write((char*)p, sizeof(int) * num);
	}
};

// --------------------
int main()
// --------------------
{
	// "TEST 만개" 파일을 바이너리 모드로 열어 Test 객체 1'0000개를 write() 멤버함수로 기록하였다.
	// 파일에는 정확하게 1'0000개 Test 객체가 저장되어 있다.

	ifstream in{ "TEST 만개", ios::binary };
	if (!in) {
		cout << "파일을 확인하세요." << endl;
		return 0;
	};

	// [문제 1] 파일에 저장된 Test 객체 10'000개를 읽어 컨테이너에 저장하려고 한다.
	// 사용할 컨테이너를 적고 사용한 이유를 설명하라.


	// [문제 2] 파일에 저장된 Test 객체 10'000개를 읽어 컨테이너에 저장하라.
	// Test 객체를 읽기 위해 추가한 코드를 모두 답지에 적어라.
	// 마지막 객체의 show를 실행하고 화면 출력 중 num 값을 답지에 적어라.

	// (참고) 처음과 다음 원소가 다음과 같으면 제대로 읽은 것이다.
	// num: 815 - 136 905 835 127 968 913 221 632 308 98 547 279 189 547 992 ...
	// num: 70 - 296 320 326 531 631 654 994 408 516 820 724 718 246 968 333 ...


	// [문제 3] Test 객체가 확보한 메모리 p에 저장된 int의 평균값을 알려주는
	// 멤버함수 getAverage()를 작성하라.

	//컨테이너의 첫 원소의 평균값을 화면에 출력하고 답지에도 적어라.


	// [문제 4] 컨테이너에 저장한 객체를 평균값을 기준으로 하여 오름차순으로 정렬하라.
	// 정렬된 컨테이너의 첫 원소의 평균값을 화면에 출력하고 답지에도 적어라.

	// (주의) 정렬하기 위해 추가한 내용을 모두 적을 것


	// [문제 5] 컨테이너에 저장된 Test 객체의 int 값 중 777이 하나라도 포함된 객체는 몇 개인가?
	// 몇 개인지 화면에 출력하고 답지에도 적어라.



}